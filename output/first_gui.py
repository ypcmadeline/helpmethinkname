# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'first_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sys
from output.process import process
from output.setting import gui_color, modes, gui_font
from PyQt5 import QtCore, QtGui, QtWidgets 
import threading # for checking update information 
import time


class Ui_kGUI(object):

    def __init__(self, directory=''):
        self.directory = directory

    def setupUi(self, kGUI):

        # debug area
        self.worker = process()
        # --------

        kGUI.setObjectName("kGUI")
        kGUI.setFixedSize(432, 407)
        kGUI.setWindowIcon(QtGui.QIcon('Icon.png'))

        # kGUI.setWindowFlags(QtCore.Qt.FramelessWindowHint)

        kGUI.setWindowOpacity(0.99) # 设置背景透明度 0为完全透明
        kGUI.setStyleSheet(f"QMainWindow \u007b background-color: {gui_color['button_frame']} \u007d")
        
        self.centralwidget = QtWidgets.QWidget(kGUI)
        self.centralwidget.setObjectName("centralwidget")

        self.top_frame = QtWidgets.QFrame(self.centralwidget)
        self.top_frame.setGeometry(QtCore.QRect(0, 0, 541, 81))
        self.top_frame.setStyleSheet("QFrame{background-color:"
                                    f"{gui_color['upper_frame']};"
                                    "}")

        self.top_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.top_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.top_frame.setObjectName("top_frame")

        self.Announce = QtWidgets.QLabel(self.top_frame)
        self.Announce.setGeometry(QtCore.QRect(30, 30, 241, 31))
        self.Announce.setStyleSheet("QAnnounce { font: bold 26px ;} ")
        self.Announce.setStyleSheet(f"QLabel\u007b font: bold 26px; color :{gui_color['upper_font']}; \u007d")
        self.Announce.setObjectName("Announce")

        self.progressBar = QtWidgets.QProgressBar(self.top_frame) 
        self.progressBar.hide()
        self.progressBar.setGeometry(QtCore.QRect(290, 40, 111, 20))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")

        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 80, 551, 431))
        self.frame.setStyleSheet(f"QFrame \u007b background-color: {gui_color['body']} \u007d")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")

        self.run_button = QtWidgets.QPushButton(self.frame)
        self.run_button.clicked.connect(self.process)   
        self.run_button.setGeometry(QtCore.QRect(40, 220, 351, 61))
        self.run_button.setStyleSheet("QPushButton {\n"
            f"    background-color: {gui_color['button_color']};\n"
            f"   color: {gui_color['down_font']};\n"
            "    border-style: outset;\n"
            "    border-width: 1px;\n"
            "    border-radius: 10px;\n"
            f"   border-color:{gui_color['button_border']};\n"
            "    font: bold 26px;\n"
            "    padding: 6px;\n"
            "}")
        self.run_button.setObjectName("run_button")
        self.stop_button = QtWidgets.QPushButton(self.frame)
        self.stop_button.clicked.connect(self.stop)
        self.stop_button.setGeometry(QtCore.QRect(40, 220, 351, 61))
        self.stop_button.hide()
        self.stop_button.setStyleSheet("QPushButton {\n"
            f"    background-color: {gui_color['button_color']};\n"
            f"   color: {gui_color['down_font']};\n"
            "    border-style: outset;\n"
            "    border-width: 1px;\n"
            "    border-radius: 10px;\n"
            f"   border-color:{gui_color['button_border']};\n"
            "    font: bold 26px;\n"
            "    padding: 6px;\n"
            "}")
        self.stop_button.setObjectName("stop_button")
        self.layoutWidget = QtWidgets.QWidget(self.frame)
        self.layoutWidget.setGeometry(QtCore.QRect(30, 30, 371, 161))
        self.layoutWidget.setObjectName("layoutWidget")

        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")

        self.Working_mode = QtWidgets.QLabel(self.layoutWidget)
        self.Working_mode.setStyleSheet("QLabel{ color: white ;font: bold 16px;}")
        self.Working_mode.setObjectName("Working_mode") 

        self.gridLayout.addWidget(self.Working_mode, 0, 0, 1, 1)

        self.Working_mode_box = QtWidgets.QComboBox(self.layoutWidget)
        self.Working_mode_box.setObjectName("Working_mode_box")
        self.Working_mode_box.addItems(modes)

        self.Working_mode_box.setStyleSheet("QComboBox{"
            f"      color: {gui_color['box_font']};"
            f"      background-color : {gui_color['text_edit_frame']};"
            f"      font : {gui_font['text_box']} ;\n"
            "}"
            "       QComboBox QListView{ "
            f"      background-color : {gui_color['text_edit_frame']}; "
            "}"
            "       QComboBox::indicator{ "
            f"      background-color :transparent; "    
            "}"
            )
        self.gridLayout.addWidget(self.Working_mode_box, 0, 1, 1, 1) 

        self.Input_file_address = QtWidgets.QPushButton(self.layoutWidget)
        self.Input_file_address.clicked.connect(self.get_file_name) 
        self.Input_file_address.setEnabled(True)
        self.Input_file_address.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.Input_file_address.setAutoFillBackground(False)
        self.Input_file_address.setStyleSheet("QPushButton {\n"
            f"   color: {gui_color['down_font']};\n"
            "    border-style: outset;\n"
            "    border-width: 0px;\n"
            "    border-radius: 0px;\n"
            "    font: bold 16px;\n"
            "}")
        self.Input_file_address.setCheckable(False)
        self.Input_file_address.setAutoDefault(False)
        # self.Input_file_address.clicked()
        self.Input_file_address.setObjectName("Input_file_address")
        self.gridLayout.addWidget(self.Input_file_address, 1, 0, 1, 1)
        self.Input_file_text = QtWidgets.QLineEdit(self.layoutWidget)
        self.Input_file_text.setText(self.directory)
        self.Input_file_text.setObjectName("Input_file_text")
        # self.Input_file_text.setFixedHeight(30)
        self.Input_file_text.setStyleSheet("QLineEdit {\n"
            f"    color: {gui_color['text_edit_font']};\n"
            f"    background-color : {gui_color['text_edit_frame']};\n"
            f"    font : {gui_font['text_box']};\n"
            "}")
        self.gridLayout.addWidget(self.Input_file_text, 1, 1, 1, 1)
        self.Output_file_name = QtWidgets.QLabel(self.layoutWidget)
        self.Output_file_name.setStyleSheet("QLabel{ color:white;font: bold 16px;}")
        self.Output_file_name.setObjectName("Output_file_name")
        self.gridLayout.addWidget(self.Output_file_name, 2, 0, 1, 1)
        self.Output_file_name_text = QtWidgets.QLineEdit(self.layoutWidget)
        self.Output_file_name_text.setObjectName("Output_file_name_text")
        self.Output_file_name_text.setStyleSheet("QLineEdit {\n"
            f"    color: {gui_color['text_edit_font']};\n"
            f"    background-color : {gui_color['text_edit_frame']};\n"
            f"    font : {gui_font['text_box']};\n"
            "}")

        self.gridLayout.addWidget(self.Output_file_name_text, 2, 1, 1, 1)
        self.Output_file_address = QtWidgets.QPushButton(self.layoutWidget)
        self.Output_file_address.clicked.connect(self.get_folder_name)
        self.Output_file_address.setEnabled(True)
        
        self.Output_file_address.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.Output_file_address.setAutoFillBackground(False)
        self.Output_file_address.setStyleSheet("QPushButton{\n"
            f"   color: {gui_color['down_font']};\n"
            "    border-style: outset;\n"
            "    border-width: 0px;\n"
            "    border-radius: 0px;\n"
            "    font: bold 16px;\n"
            "}")
        self.Output_file_address.setCheckable(False)
        self.Output_file_address.setAutoDefault(False)
        self.Output_file_address.setObjectName("Output_file_address")
        self.gridLayout.addWidget(self.Output_file_address, 3, 0, 1, 1)
        self.Output_file_address_text = QtWidgets.QLineEdit(self.layoutWidget)
        self.Output_file_address_text.setObjectName("Output_file_address_text")
        self.Output_file_address_text.setStyleSheet("QLineEdit {\n"
            f"    color: {gui_color['text_edit_font']}; \n"
            f"    background-color : {gui_color['text_edit_frame']}; \n"
            f"    font : {gui_font['text_box']} ;\n"
            "}" )

        self.gridLayout.addWidget(self.Output_file_address_text, 3, 1, 1, 1)
        self.frame.raise_()
        self.top_frame.raise_()
        kGUI.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(kGUI)
        self.statusbar.setObjectName("statusbar")
        kGUI.setStatusBar(self.statusbar)

        self.retranslateUi(kGUI)
        QtCore.QMetaObject.connectSlotsByName(kGUI)

    def retranslateUi(self, kGUI):
        _translate = QtCore.QCoreApplication.translate
        kGUI.setWindowTitle(_translate("kGUI", "K GUI"))
        self.Announce.setText(_translate("kGUI", "Smart GUI"))
        self.run_button.setText(_translate("kGUI", "Run"))
        self.stop_button.setText(_translate("kGUI", "Stop"))
        self.Working_mode.setText(_translate("kGUI", "Working Mode"))
        self.Input_file_address.setText(_translate("kGUI", "Input File Address "))
        self.Output_file_name.setText(_translate("kGUI", "Output File name"))
        self.Output_file_address.setText(_translate("kGUI", "Output File Address"))

    def get_file_name(self):
        file_name = QtWidgets.QFileDialog.getOpenFileName()
        # print()
        self.Input_file_text.setText(file_name[0])

    def get_folder_name(self):
        folder_name = QtWidgets.QFileDialog.getExistingDirectory()
        self.Output_file_address_text.setText(folder_name)

    def process(self):
        file_address = self.Input_file_text.text()
        mode = self.Working_mode_box.currentText()
        output_file_name = self.Output_file_name_text.text()
        output_file_address = self.Output_file_address_text.text()
        self.run_button.hide()
        self.worker.update(file_address,mode,output_file_name,output_file_address)
        self.worker.run()

        h = threading.Thread(target = self.progress_count)
        h.start()
        self.stop_button.show()

    def progress_count(self):
        i=0
        while(i != 36):
            i=self.worker.return_progress()
            print('progress '+ str(i))
            time.sleep(1)

    def stop(self):
        self.stop_button.hide()
        self.worker.stop()
        self.run_button.show()

    def end(self):
        print("end")

if __name__ == "__main__":
#     import sys
    app = QtWidgets.QApplication(sys.argv)
    kGUI = QtWidgets.QMainWindow()
    ui = Ui_kGUI()
    ui.setupUi(kGUI)
    kGUI.show()
    sys.exit(app.exec_())
